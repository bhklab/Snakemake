configfile: "config.yaml"

import pandas as pd
import os

samples = pd.read_table(
    config["sample_file"]
).set_index(
    "sample", drop=False
)

output_dir = os.environ.get("output_dir")

known_mills="/cluster/tools/data/genomes/human/hg19/variantcallingdata/Mills_and_1000G_gold_standard.indels.hg19.vcf"
known_1000G="/cluster/tools/data/genomes/human/hg19/variantcallingdata/1000G_phase1.indels.hg19.vcf"
region="/cluster/projects/bhklab/Data/ExomeIndices/hg19/S04380110_Covered.headless.bed"
dbsnp="/cluster/tools/data/genomes/human/hg19/variantcallingdata/dbsnp_138.hg19.vcf"
norm="/cluster/projects/bhklab/Data/TFRI_Exome/alignment/Pugh_INS_ex_dil_111_AGTACAAG_L005/Pugh_INS_ex_dil_111_AGTACAAG_L005.realigned.recal.bam"
ref_genome="hg19"

def get_r1(wildcards):
    return samples.read1[wildcards.sample]

def get_r2(wildcards):
    return samples.read2[wildcards.sample]



rule all:
    input: expand("{output_dir}/vcfIntersect/{sample}_intersect_snv", sample = samples["sample"], output_dir=output_dir),
    params: 
        runtime="120:00:00",
        partition="all"
    threads: 1
    resources: mem_mb=6000
    shell:
     """
     module load igenome-human/hg19
     """   

rule MuTect1:
    input:
        bam = "{output_dir}/alignment/{sample}/{sample}.realigned.recal.bam",
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
        interval = region
    params:
        runtime="12:00:00",
        partition="all"
    output:
        vcf="{output_dir}/MuTect1/{sample}/{sample}.mut1.vcf",
        stats="{output_dir}/MuTect1/{sample}/{sample}.call_stats",
        coverage="{output_dir}/MuTect1/{sample}/{sample}.wig.txt"
    threads: 2 
    resources: mem_mb=10000
    shell:
     """
     module load mutect/1.1.4
     java -Xmx10g -jar $mutect_dir/muTect-1.1.4.jar -T MuTect \
     -R {input.ref} \
     -L {input.interval} \
     --input_file:tumor {input.bam} \
     --vcf {output.vcf} \
     --out {output.stats} \
     --coverage_file {output.coverage} \
     --downsampling_type NONE \
     --fraction_contamination 0.02
     """

rule haploGATK:
    input:
        bam="{output_dir}/alignment/{sample}/{sample}.realigned.recal.bam", 
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
    params:
        runtime="24:00:00",
        partition="all"
    output: "{output_dir}/Haplotype/{sample}/{sample}.raw.snps.indels.vcf"
    threads: 4
    resources: mem_mb=8000
    shell:
     """
     module load gatk/3.8
     java -Xmx8g -jar $gatk_dir/GenomeAnalysisTK.jar -T HaplotypeCaller -nct 4 -R {input.ref} -I {input.bam} -o {output}
     """

rule Strelka:
    input:
        tumor="{output_dir}/alignment/{sample}/{sample}.realigned.recal.bam",
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
        conf="/cluster/home/amammoli/Strelka/strelka_config_bwa.ini",
        normal=norm,
    params:
        outdir="{output_dir}/Strelka/{sample}/{sample}",
        runtime="72:00:00",
        partition="all"
    output: directory("{output_dir}/Strelka/{sample}/{sample}.myAnalysis")
    threads: 4
    resources: mem_mb=8000
    shell:
     """
     module load strelka/1.0.14
     configureStrelkaWorkflow.pl --normal={input.normal}  --tumor={input.tumor} --ref={input.ref} --config={input.conf} --output-dir={output}
     make -C {params.outdir}.myAnalysis
     """

rule varscanCopyNumber:
    input:
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
        normal = norm,
        tumor = "{output_dir}/alignment/{sample}/{sample}.realigned.recal.bam",
        bed = region
    params:
        outdir="{output_dir}/Varscan/cnv/{sample}/{sample}.vscn",
        runtime="24:00:00",
        partition="all"
    output: "{output_dir}/Varscan/cnv/{sample}/{sample}.vscn.copynumber"
    threads: 3
    resources: mem_mb=20000
    shell:
     """
     module load samtools/0.1.18
     module load varscan/2.4.2
     samtools mpileup -B -q 1 -d 1000000 -l {input.bed} -f {input.ref} {input.normal} {input.tumor} | java -Xmx12g -jar $varscan_dir/VarScan.jar copynumber - {params.outdir} --mpileup 1
     """

rule filterMuTect2:
    input:
        vcf = "{output_dir}/MuTect2Merge/{sample}/{sample}_merged_mut2.vcf",
    params:
        outdirsnv="{output_dir}/MuTect2Merge/{sample}/{sample}.snvs",
        outdirindel="{output_dir}/MuTect2Merge/{sample}/{sample}.indels",
        runtime="12:00:00",
        partition="all"
    output: 
        snv="{output_dir}/MuTect2Merge/{sample}/{sample}.snvs.recode.vcf",
        indel="{output_dir}/MuTect2Merge/{sample}/{sample}.indels.recode.vcf"
    threads: 3
    resources: mem_mb=8000
    shell:
     """
     module load vcftools
     vcftools --vcf {input.vcf} --remove-indels --recode --recode-INFO-all --out {params.outdirsnv} --remove-filtered-all
     vcftools --vcf {input.vcf} --keep-only-indels --recode --recode-INFO-all --out {params.outdirindel} --remove-filtered-all
     """

rule varscanSomatic:
    input:
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
        normal = norm,
        tumor = "{output_dir}/alignment/{sample}/{sample}.realigned.recal.bam",
        bed = region
    params:
        runtime="72:00:00",
        partition="all"
    output: 
        snp="{output_dir}/Varscan/snv/{sample}/{sample}.snp",
        indel="{output_dir}/Varscan/snv/{sample}/{sample}.indel"
    threads: 3
    resources: mem_mb=20000
    shell:
     """
     module load samtools/0.1.18
     module load varscan/2.4.2
     samtools mpileup -B -q 1 -d 1000000 -l {input.bed} -f {input.ref} {input.normal} {input.tumor} | java -Xmx12g -jar $varscan_dir/VarScan.jar somatic --mpileup 1 --output-snp {output.snp} --output-indel {output.indel}
     """

rule Sequenza:
    input:
        snp="{output_dir}/Varscan/snv/{sample}/{sample}.snp",
        copynum="{output_dir}/Varscan/cnv/{sample}/{sample}.vscn.copynumber"
    params:
        script="/cluster/home/amammoli/SequenzaSingleSample_v2.1_hg19.R",
        runtime="72:00:00",
        partition="all"
    output: directory("{output_dir}/Sequenza/{sample}")
    threads: 4
    resources: mem_mb=20000
    shell:
     """
     module load R/3.3.0
     Rscript {params.script} -s {input.snp} -c {input.copynum} -o {output}
     """

rule varscanProcessSomatic:
    input:
        snp="{output_dir}/Varscan/snv/{sample}/{sample}.snp",
        indel="{output_dir}/Varscan/snv/{sample}/{sample}.indel"
    params:
        runtime="72:00:00",
        partition="all"
    output: 
        snp="{output_dir}/Varscan/snv/{sample}/{sample}.snp.Somatic.hc",
        indel="{output_dir}/Varscan/snv/{sample}/{sample}.indel.Somatic.hc"
    threads: 4
    resources: mem_mb=16000
    shell:
     """
     module load varscan/2.4.2
     java -Xmx8g -jar $varscan_dir/VarScan.jar processSomatic {input.snp} {output.snp}
     java -Xmx8g -jar $varscan_dir/VarScan.jar processSomatic {input.indel} {output.indel}
     """

rule varscanToVCF:
    input:
        snp="{output_dir}/Varscan/snv/{sample}/{sample}.snp.Somatic.hc",
        indel="{output_dir}/Varscan/snv/{sample}/{sample}.indel.Somatic.hc"
    params:
        runtime="12:00:00",
        partition="all"
    output:
        snp="{output_dir}/Varscan/snv/{sample}/{sample}.snp.Somatic.hc.vcf",
        indel="{output_dir}/Varscan/snv/{sample}/{sample}.indel.Somatic.hc.vcf"
    threads: 4
    resources: mem_mb=12000
    shell:
     """
     python /cluster/home/amammoli/varscan/hg19/varscan2vcf.py {input.snp} > {output.snp}
     python /cluster/home/amammoli/varscan/hg19/varscan2vcf.py {input.indel} > {output.indel}
     """


rule vcfIntersectINDEL:
    input:
        var_vcf="{output_dir}/Varscan/snv/{sample}/{sample}.indel.Somatic.hc.vcf",
        mut2_vcf="{output_dir}/MuTect2Merge/{sample}/{sample}.indels.recode.vcf",
        strelka_vcf="{output_dir}/Strelka/{sample}/{sample}.myAnalysis",
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
        sequenza="{output_dir}/Sequenza/{sample}"
    params:
        temp_file="{output_dir}/vcfIntersectTempINDEL/{sample}",
        outdir="{output_dir}/vcfIntersectINDEL/{sample}",
        var_final="{output_dir}/vcfIntersectINDEL/{sample}/{sample}_var_indel.gz",
        mut2_final="{output_dir}/vcfIntersectINDEL/{sample}/{sample}_mut2_indel.gz",
        strelka_final="{output_dir}/vcfIntersectINDEL/{sample}/{sample}_strelka_indel.gz",
        runtime="12:00:00",
        partition="all"
    output: directory("{output_dir}/vcfIntersect/{sample}_intersect_indel")
    threads: 4
    resources: mem_mb=10000
    shell:
     """
     module load vcftools/0.1.15
     module load tabix/0.2.6
     module load igenome-human/hg19
     module load gatk/3.8
     mkdir -p {params.temp_file}
     mkdir -p {params.outdir}
     
     ls -la {input.sequenza}
     vcf-sort -c  {input.var_vcf} > {params.temp_file}_var_sorted.vcf
     vcf-sort -c  {input.mut2_vcf} > {params.temp_file}_mut2_sorted.vcf
     vcf-sort -c  {input.strelka_vcf}/results/passed.somatic.indels.vcf > {params.temp_file}_strelka_sorted.vcf


     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_var_sorted.vcf \
     -o {params.temp_file}_var_sorted_left.vcf \
     --dontTrimAlleles
     
     bgzip -c {params.temp_file}_var_sorted_left.vcf > {params.var_final}
     tabix -p vcf {params.var_final}


     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_mut2_sorted.vcf \
     -o {params.temp_file}_mut2_sorted_left.vcf \
     --dontTrimAlleles
     
     bgzip -c {params.temp_file}_mut2_sorted_left.vcf > {params.mut2_final}
     tabix -p vcf {params.mut2_final}


     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_strelka_sorted.vcf \
     -o {params.temp_file}_strelka_sorted_left.vcf \
     --dontTrimAlleles
     
     bgzip -c {params.temp_file}_strelka_sorted_left.vcf > {params.strelka_final}
     tabix -p vcf {params.strelka_final}

     /cluster/projects/pughlab/bin/bcftools/bcftools isec --nfiles +2 {params.outdir}/*indel.gz -p {output}
     """



rule vcfIntersectSNV:
    input:
        mut1_vcf="{output_dir}/MuTect1/{sample}/{sample}.mut1.vcf",
        var_vcf="{output_dir}/Varscan/snv/{sample}/{sample}.snp.Somatic.hc.vcf",
        mut2_vcf="{output_dir}/MuTect2Merge/{sample}/{sample}.snvs.recode.vcf",
        strelka_vcf="{output_dir}/Strelka/{sample}/{sample}.myAnalysis",
        ref = '/cluster/tools/data/genomes/human/hg19/iGenomes/Sequence/WholeGenomeFasta/genome.fa',
        sequenza="{output_dir}/Sequenza/{sample}",
        validate = "{output_dir}/vcfIntersect/{sample}_intersect_indel",
        
    params:
        temp_file="{output_dir}/vcfIntersectTemp/{sample}",
        outdir="{output_dir}/vcfIntersectSNV/{sample}",
        mut1_final="{output_dir}/vcfIntersectSNV/{sample}/{sample}_mut1_snv.gz",
        var_final="{output_dir}/vcfIntersectSNV/{sample}/{sample}_var_snv.gz",
        mut2_final="{output_dir}/vcfIntersectSNV/{sample}/{sample}_mut2_snv.gz",
        strelka_final="{output_dir}/vcfIntersectSNV/{sample}/{sample}_strelka_snv.gz",
        runtime="12:00:00",
        partition="all"
    output: directory("{output_dir}/vcfIntersect/{sample}_intersect_snv")
    threads: 4
    resources: mem_mb=10000
    shell:
     """
     module load vcftools/0.1.15
     module load tabix/0.2.6
     module load igenome-human/hg19
     module load gatk/3.8
     mkdir -p {params.temp_file}
     mkdir -p {params.outdir}
     ls -la {input.sequenza}
     ls -la {input.validate}
     
     vcf-sort -c  {input.mut1_vcf} > {params.temp_file}_mut1_sorted.vcf
     vcf-sort -c  {input.var_vcf} > {params.temp_file}_var_sorted.vcf
     vcf-sort -c  {input.mut2_vcf} > {params.temp_file}_mut2_sorted.vcf
     vcf-sort -c  {input.strelka_vcf}/results/passed.somatic.snvs.vcf > {params.temp_file}_strelka_sorted.vcf

     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_mut1_sorted.vcf \
     -o {params.temp_file}_mut1_sorted_left.vcf \
     --dontTrimAlleles

     bgzip -c {params.temp_file}_mut1_sorted_left.vcf > {params.mut1_final}
     tabix -p vcf {params.mut1_final}

     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_var_sorted.vcf \
     -o {params.temp_file}_var_sorted_left.vcf \
     --dontTrimAlleles
     
     bgzip -c {params.temp_file}_var_sorted_left.vcf > {params.var_final}
     tabix -p vcf {params.var_final}


     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_mut2_sorted.vcf \
     -o {params.temp_file}_mut2_sorted_left.vcf \
     --dontTrimAlleles
     
     bgzip -c {params.temp_file}_mut2_sorted_left.vcf > {params.mut2_final}
     tabix -p vcf {params.mut2_final}


     ## Left align indels
     java -jar $gatk_dir/GenomeAnalysisTK.jar \
     --unsafe \
     -T LeftAlignAndTrimVariants \
     -R {input.ref} \
     --variant {params.temp_file}_strelka_sorted.vcf \
     -o {params.temp_file}_strelka_sorted_left.vcf \
     --dontTrimAlleles
     
     bgzip -c {params.temp_file}_strelka_sorted_left.vcf > {params.strelka_final}
     tabix -p vcf {params.strelka_final}

     /cluster/projects/pughlab/bin/bcftools/bcftools isec --nfiles +2 {params.outdir}/*snv.gz -p {output}
     """
